package days05.note;

public class note01 {
	public static void main(String[] args) {
		
		// 자바 대소문자 구분 명확하게 하기.
		
		// 언어 구성 요소
		// - 시스템 정의 어휘 : 예약어, 연산자, 구분자, 주석
		// - 사용자 정의 어휘 : 식별자(클래스이름, 메소드 이름, 변수),리터럴
		
		// 함수 = 연관된 문장들의 집합(모음(그룹)) 
		// = 메소드(OOP - Object Oriented Programming)
		// 클래스, 객체에 포함
		
		// 객체(Object)
		// - 실제로 동작하는 요소(제품 또는 부품)
		
		// 클래스(설계도와 같은 역할)
		// 객체의 속성과 기능을 정의한 프로그래밍 요소
		
		// 객체지향(OOP)의 중요 특징
		// - 캡슐화, 추상화
		// - 상속성
		// - 다향성
		
		// 클래스(class)
		// - 객체의 설꼐도, 속성, 메소드들로 구성, -부품의 설계도, 제품의 설계도
		// - 인스턴스 : 클래스로부터 만들어진 실체, 객체 - 부품, 제품
		
		// 클래스로부터 객체를 생성
		// new 클래스();
		// new 연산자로 메모리 힙 영역에 객체 생성
		// 객체 생성 후 객체 번지가 리턴
		// - 참조 변수에 저장하여 참조(reference)변수 통해 객체 사용 가능
		
		/*
		언어구성요소
		시스템 정의 어휘 : 예약어, 연산자, 구분자, 주석
		사용자 정의 어휘 : 식별자(클래스이름, 메소드 이름, 변수), 리터럴

		함수 = 연관된 문장들이 집합(모음) 
		vs. 메소드(OOP – Object Oriented Programming), 클래스, 객체에 포함

		객체
		실제로 동작하는 요소, 제품 또는 부품
		클래스
		객체의 속성과 기능을 정의한 프로그래밍 요소 */
		
		// 클래스 : 객체를 만들기 위한 설계도
		// 객체 : 클래스로부터 생성되며 'new 클래스()'로 생성
		// 인스턴스 : 객체는 클래스의 실체화한 것
		// 클래스 멤버 : 클래스에 선언되는 멤버로 필드, 생성자, 메소드, [Getter/Setter]가 있음.
		
		// 클래스의 구성 멤버
		// 필드(Field) - 객체의 데이터가 저장되는 곳
		// 생성자(Constructor) - 객체 생성 시 초기화 역할 담당
		// 메소드(Method) - 객체의 동작에 해당하는 실행 블록
		// Getter/Setter - 필드를 안전하게 접근
		
		// 생성자 핵심 키워드 : 생성자, 생성자 선언, 매개변수, 
		//							객체 초기화, 오버로딩, this()
		// 생성자는 new 연산자로 호출되는 중활호{} 블록이다.
		// 객체 생성 시 초기화를 담당한다.
		// 생성자 : 클래스로부터 new 연산자로 객체를 생성할 때 호출되어 객체의
		// 			  초기화를 담당하는 프로그래밍 요소
		// 객체 초기화 : 필드를 초기화하거나 메소드를 호출해 객체를 사용할
		//					준비를 하는것
		// 기본 생성자 : 클래스 내부의 생성자 선언 생략할 경우 바이트 코드에 자동 추가
		// 생성자 오버로딩
		// - 매개 변수를 달리하는 생성자 여러 개 선언
		// - 외부에서 제공되는 다양한 데이터를 사용하여 객체 화하기 위해
		
		// overloading(중첩 - 메소드 이름 같고, 매개변수 타입, 갯수가 다름)
		// overriding(재정의 - 메소드 이름같고, 매개변수 타입과 갯수까지 같음)
		
		// this() 코드
		// - 생성자에서 다른 생성자 호출
		// - 필드 초기화 내용을 한 생성자에만 집중 작성하고 나머지 생성자는
		//	  초기화 내용 가진 생성자로 호출
		
		// this(매개변수_목록) : 객체 자신의 또 다른 생성자를 호출할 때 사용
		//								생성자 첫 줄에 만 사용
		
		// 메소드(method) 핵심 키워드
		// : 선언부, void, 매개 변수, 리턴문, 호출, 오버로딩
		// - 메소드는 class 의 구성요소
		
		// 패키지가 다르면 import 해야한다(컴파일러가 해주는 경우도 있고 안해주는 경우가 있다).
	}
}
