package chap06.note;

public class note04 {
	
	// 인터페이스
	// 핵심 키워드 : 인터페이스, 상수 필드, 추상 메소드, 구현 클래스, 인터페이스 사용
	// 핵심 포인트
	// - 인터페이스란 객체의 사용 방법을 정의한 타입이다.
	// - 인터페이스를 통해 다양한 객체를 동일한 사용 방법으로 이용할 수 있다.
	// - 인터페이스를 이용해서 다향성을 구현할 수 있다.
	
	// 인터페이스(interface)
	// - 개발코드는 인터페이스를 통해서 객체와 서로 통신한다.
	// - 인터페이스의 메소드 호출하면 객체의 메소드가 호출된다.
	// - 개발 코드를 수정하지 않으면서 객체 교환이 가능하다.
	// - 인터페이스는 필드, 매개 변수, 로컬 변수의 타입으로 선언가능
	
	// 인터페이스 : 객체의 사용 방법 정의한 타입
	// 상수 필드(변수) : 인터페이스의 필드는 기본적으로 public static final 특성 가짐
	// 추상 메소드 : 인터페이스의 메소드는 public avstract 생략되고 메소드 선언부만 있는 추상 메소드
	
	// 인터페이스 타입 변환과 다향성
	
}
